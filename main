import requests
import urllib.request
import os.path 
from os    import path
import re
from collections import Counter


url = "https://s3.amazonaws.com/tcmg476/http_access_log"

r = requests.get(url, stream = True)


with open("python.txt","wb") as textfile:
   for chunk in r.iter_content(chunk_size=1024):

       if chunk:
           textfile.write(chunk)

file = open ("python.txt")

result1 = {"day data": {}}
result2 = {"week data": {}}
result3 = {"month data": {}}
result4 = {"request not successful": 0}
result5 = {"request redirected elsewhere": 0}
result6 = {"filetime request frequency": {}}

result7 = {"most requested file": {}}
result8 = {"least requested file": {}}

fileMost = None
fileLeast = None
countMost = 0
countLeast = 0

date_day = None
days = 0
week = None
months_done = []

for line in file:
    
    if len(line) >= 56:
        data = line.split()
        date = data[3][1::].split(':')
        if not (date_day == date[0]):
            date_day = date[0]
            days += 1
            if days % 7 == 0:
                week = date_day
       
   
        if date[0] in result1["day data"]:
            result1["day data"][date[0]] += 1
        else:
            result1["day data"][date[0]] = 0
        

        if week in result2["week data"]:
            result2["week data"][week] += 1
        else:
            result2["week data"][week] = 0
        month = date[0][3::]
        
       
        if month not in months_done:
            file_name = month[:3:] + month[4::]
            if (len(file_name)) == 7:
                month_file = open(month[:3:] + month[4::] + ".txt", 'w')
                print(file_name)
            months_done.append(month)
        month_file.write(line)

      ## Count file requests per month
        if month in result3["month data"]:
            result3["month data"][month] += 1
        else:
            result3["month data"][month] = 0


url = "https://s3.amazonaws.com/tcmg476/http_access_log"


regex = re.compile(".*\[([^:]*):(.*) \-[0-9]{4}\] \"([A-Z]+) (.+?)( HTTP.*\"|\") ([2-5]0[0-9]) .*")

print("Checking to see if log already exists:")

if  not path.exists('log'):
	print("Log did not exist, downloading from: ")
	print(url)
	urllib.request.urlretrieve(url, 'log')
	print("Done downloading")
else:
	print("Log existed, skipping download.\n")

file = open('log', 'r')

logfile =[]


broken_line =[]


for line in file:
    logfile.append(line)

code_4xx = 0
code_3xx = 0
file_requests = []


for element in logfile:
	pieces = re.split(regex, element)
	
	try:
		file_requests.append(pieces[4])
		if pieces[6].startswith('3'):
			code_3xx+=1
		if pieces[6].startswith('4'):
			code_4xx+=1
	except IndexError:
		pass
	continue

total_count = 0
for item in logfile:
    total_count+=1

print(result1)
print(result2)
print(result3)

print("***** Total 4xx respones *****")
print(code_4xx)
percent_4xx = (code_4xx/total_count) * 100
print(round(percent_4xx,2))


print("***** Total 3xx respones *****")
print(code_3xx)
percent_3xx = (code_3xx / total_count) * 100
print(round(percent_3xx,2))



Counter = Counter(file_requests)
most_freq = Counter.most_common(1)
print(most_freq)


total_count = 0
for item in logfile:
    total_count+=1

print("Total line count= \n") 
print(total_count)
